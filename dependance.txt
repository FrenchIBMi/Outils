Créer de la dépendance entre jobs

vous planifiez des jobs par le job scheduler et vous voudriez faire un truc du genre si le traitement "a" c'est bien passé lancer le traitement "b".

Voici donc un méthode qui peux vous aider, on utilisera les dtaaras , le principe, le traitement préalable créera une dtaara en cas de traitement correct et le deuxieme programme s'exécutera uniquement si cette dtaara est présente.

vous devrez avoir un fichier qui définit ces dépendances !

CREATE TABLE LSTDEPPGM(                         
       PGM CHAR (10 ) NOT NULL WITH DEFAULT,    
       PGMDEP CHAR (10 ) NOT NULL WITH DEFAULT) 

insertion par sql des dépendances dans votre table

INSERT INTO LSTDEPPGM VALUES('PGM2', 'PGM1')

il vous faut un petit programme qui lit les dépendances

**FREE                                                 
   // <-- récuperation Pgm dépendant pgm rtvdeppgm                  
   //                                    -->           
      dcl-pi *n ;                                      
        P_pgm      char(10) ;                          
        P_pgmdep   char(10) ;                          
      end-pi;                                          
     exec sql                                          
        SELECT PGMdep         into :P_pgmdep           
        FROM LSTDEPPGM                                 
          where PGM = :P_pgm ;                         
       if sqlcode <> 0 ;                               
       P_pgm = '*NODEP' ;                              
       endif;                                          
     *inlr = *on  ;  

Ensuite il vous faudra faire des includes dans vos programmes clle

DEP001      CLLE        Déclaration des variables 
/*-------------------------------------------------------------------*/
/* Déclaration des variables                                         */
/*-------------------------------------------------------------------*/
DCL &LIB *CHAR 10 ('EXPLOIT')                                          
dcl var(&caller) type(*char) len(10)                                   
dcl var(&pgm) type(*char) len(10)                                      
dcl var(&msgkey) type(*char) len(4)                                    
dcl var(&sender) type(*char) len(80)                                   
dcl &dta *char 40                                                      
dcl &pgmdep *CHAR 10 
                                                         
DEP002      CLLE        Récupération du nom de programme 
/*-------------------------------------------------------------------*/
/* Récupération nom du programme                                     */
/*-------------------------------------------------------------------*/
chgvar var(&caller) value(' ')                                         
/* name of the current program */                                      
sndpgmmsg msg('who am i ?') topgmq(*same) keyvar(&msgkey)              
             RCVMSG     MSGTYPE(*INFO) MSGKEY(&MSGKEY) RMV(*YES) +     
                                       SENDER(&SENDER)                 
chgvar var(&pgm) value(%sst(&sender 56 10)) 
                           
DEP003      CLLE        Création dtaara témoin 
/*-------------------------------------------------------------------*/
/* Création dtaara témoin                                            */
/*-------------------------------------------------------------------*/
             CRTDTAARA  DTAARA(&LIB/&PGM) TYPE(*CHAR) LEN(40) +        
                          TEXT('Témoin pour' *BCAT &PGM)               
             monmsg CPF1023 exec(do)                                   
             SNDUSRMSG  MSG('Témoin pour' *BCAT &PGM *BCAT 'déjà +     
                          existant') MSGTYPE(*INFO)                    
             enddo 
                                                              
DEP004      CLLE        Controle dépendance
/*-------------------------------------------------------------------*/
/* Vérification si dépendance                                        */
/*-------------------------------------------------------------------*/
call rtvdeppgm (&pgm &pgmdep)                                          
if cond(&pgmdep = '*NODEP')                                            
chkobj &lib/&pgmdep *dtaara                                            
monmsg cpf9801 exec(do)                                                
             SNDUSRMSG  MSG('Pour que le programme' *BCAT &PGM *BCAT + 
                          'tourne, il faut que le programme ' *BCAT +  
                          &PGMDEP *BCAT 'est tourné.') MSGTYPE(*INFO)  
return                                                                 
enddo                                                                                

DEP005      CLLE        Suppression dtaara témoin
/*-------------------------------------------------------------------*/
/* Supression dtaara témoin                                          */
/*-------------------------------------------------------------------*/
             dltDTAARA  DTAARA(&LIB/&PGMdep)                           
             monmsg CPF1025 exec(do)                                   
             SNDUSRMSG  MSG('Dtaara non trouvée' *BCAT &PGMDEP) +      
                            MSGTYPE(*INFO)                             
             enddo                                                     

FAC001      CLLE        Variables pour info dtaara
/*-------------------------------------------------------------------*/
/* Variables pour informations LOG                                   */
/*-------------------------------------------------------------------*/
DCL &JOB *CHAR 10                                                      
DCL &USR *CHAR 10                                                      
DCL &NBR *CHAR 6                                                       
DCL &DAT *CHAR 6                                                       
DCL &TIM *CHAR 6 
                                                      
FAC002      CLLE        Ecriture info dtaara 
/*-------------------------------------------------------------------*/
/* Ecriture info dans la dtaara                                      */
/*-------------------------------------------------------------------*/
             RTVJOBA    JOB(&JOB) USER(&USR) NBR(&NBR)                 
             rtvsysval qdate &dat                                      
             rtvsysval qtime &tim                                      
/* */                                                                  
             CHGDTAARA  DTAARA(&LIB/&PGM *ALL) VALUE(&JOB *CAT &USR +  
                          *CAT &NBR *CAT &DAT *CAT &TIM) 


                           

Exemple d'un squelette de programme préalable 

/*-------------------------------------------------------------------*/
/* Squelette pour programme  préalable                               */
/*-------------------------------------------------------------------*/
PGM                                                                    
include dep001                                                         
include dep002                                                         
/*-------------- Début de traitement --------------------------------*/
             SNDUSRMSG  MSG('Fin pgm' *BCAT &PGM) +                    
                            MSGTYPE(*INFO)                             
/*-------------- Fin de traitement ----------------------------------*/
/* test si fin de traitement ok                                      */
include dep003                                                         
ENDPGM  

il vous suffit d'inclure vos déclarations dcl, dclf après l'include dep001
et tout votre code entre le include dep002 et dep003                                                                                                  


exemple d'un squelette de programme dépendant

/*-------------------------------------------------------------------*/
/* Squelette pour programme  dépendant                               */
/*-------------------------------------------------------------------*/
PGM                                                                    
include dep001                                                         
include dep002                                                         
include dep004                                                         
/*-------------- Début de traitement --------------------------------*/
             SNDUSRMSG  MSG('Fin pgm' *BCAT &PGM) +                    
                            MSGTYPE(*INFO)                             
/*-------------- Fin de traitement ----------------------------------*/
/* test si fin de traitement ok                                      */
include dep005                                                         
ENDPGM                                                                 


il vous suffit d'inclure vos déclarations dcl, dclf après l'include dep001
et tout votre code entre le include dep004 et dep005
   
Ce modele marche vous pouvez l'adapter et l'améliorer 

vous pouvez l'améliorer par exemple en ajoutant des informations d'exécution dans la dtaara le programme dépendant ne change pas

voici le programme préalable

/*-------------------------------------------------------------------*/
/* Squelette pour programme  préalable                               */
/*-------------------------------------------------------------------*/
PGM                                                                    
include fac001                                                         
include dep001                                                         
/*-------------- Déclaration des variables --------------------------*/
/* dcl, dclf et monmsg général                                       */
/*-------------- fin de déclaration ---------------------------------*/
include dep002                                                         
/*-------------- Début de traitement --------------------------------*/
             SNDUSRMSG  MSG('Fin pgm' *BCAT &PGM) +                    
                            MSGTYPE(*INFO)                             
/*-------------- Fin de traitement ----------------------------------*/
/* test si fin de traitement ok                                      */
include dep003                                                         
include fac002                                                          
ENDPGM                                                                  

Vous pouvez alors voir la dtaara le job et la date et l'heure de fin de traitement 

exemple 

programme DSPLOGDEP
/*-------------------------------------------------------------------*/
/* information execution du préalable                                */
/*-------------------------------------------------------------------*/
pgm parm(&pgm)                                                         
include dep001                                                         
             CHKOBJ     OBJ(&LIB/&PGM) OBJTYPE(*DTAARA)                
             monmsg cpf9801 exec(do)                                   
             SNDUSRMSG  MSG('Pas de log pour le programme' *BCAT +     
                          &PGM) MSGTYPE(*INFO)                         
             return                                                    
             enddo                                                     
             RTVDTAARA  DTAARA(&LIB/&PGM *ALL) RTNVAR(&DTA)            
             sndusrmsg  msg(+                                          
   'Travail :' *bcat  +                                                
  %sst(&dta  1 10) *tcat '/' *tcat  +                                  
  %sst(&dta 11 10) *tcat '/' *tcat  +                                  
  %sst(&dta 11 10) *tcat '/' *tcat  +        
  %sst(&dta 21  6) *bcat 'Date :' *tcat +    
  %sst(&dta 27  6) *bcat 'Heure :'  *tcat +  
  %sst(&dta 33  6))   MSGTYPE(*INFO)         
endpgm                                     

Commande DSPLOGDEP
/*-------------------------------------------------------------------*/
/* information execution du préalable                                */
/*-------------------------------------------------------------------*/
             CMD        PROMPT('Affichage Log dépendance')    
             PARM       KWD(PGM) TYPE(*NAME) LEN(10) MIN(1) + 
                          PROMPT('Nom du programme')                                       
  
exemples de résultats de l'exécution de la commande

1) Cas ssi dtaara n'existe pas
  
     Pas de log pour le programme PGMx

2) Cas si la dtaara existe
                              
     Travail : QPADEV000F/QSECOFR/137692 Date :030420 Heure :103315 



Remarques :

Pour enlever une dépendance, Par SQL

DELETE FROM QGPL/LSTDEPPGM WHERE PGM = 'PGMA'

Vous n'êtes pas obliger de recompiler les programmes 


Vous pouvez passer par un programme chapeau à votre programme applicatif par exemple si vous n'avez pas le source
vous devrez peut être gérer l'erreur sur le call 

exemple avec 2 programmes PGMA et PGMB 

Exemple d'un squelette de programme préalable CPGMA

/*-------------------------------------------------------------------*/
/* Squelette pour programme  préalable                               */
/*-------------------------------------------------------------------*/
PGM                                                                    
include dep001                                                         
include dep002                                                         
/*-------------- Début de traitement --------------------------------*/
              Call pgm(PGMA) 
              monmsg cpf9801 exec(do)
              return
              enddo
/*-------------- Fin de traitement ----------------------------------*/
/* test si fin de traitement ok                                      */
include dep003                                                         
ENDPGM   


exemple d'un squelette de programme dépendant CPGMB

/*-------------------------------------------------------------------*/
/* Squelette pour programme  dépendant                               */
/*-------------------------------------------------------------------*/
PGM                                                                    
include dep001                                                         
include dep002                                                         
include dep004                                                         
/*-------------- Début de traitement --------------------------------*/
             Call pgm(PGMB)                          
/*-------------- Fin de traitement ----------------------------------*/
/* test si fin de traitement ok                                      */
include dep005                                                         
ENDPGM  

incription dans la table des dépendances 

INSERT INTO LSTDEPPGM VALUES('CPGMB', 'CPGMA') 

 


 
  